{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActinBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handelDidRetweet","newTweet","updateTweetInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookUp","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","TweetsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,uMCgBpC,SAASC,EAAcC,EAAQC,EAAUC,EAAUC,GACxD,IAAIC,EACAD,IACFC,EAAWC,KAAKC,UAAUH,IAE5B,IAAMI,EAAM,IAAIC,eACVC,EAAG,mCAA+BR,GACxCM,EAAIG,aAAe,OACnB,IAAMC,EAxBR,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIH,EAASC,EAAQE,GAAGE,OAExB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,EAWWU,CAAU,aAC5BhB,EAAIiB,KAAKxB,EAAQS,GACjBF,EAAIkB,iBAAiB,eAAgB,oBAEjCd,IAEFJ,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAed,IAGtCJ,EAAImB,OAAS,WACTxB,EAASK,EAAIoB,SAAUpB,EAAIqB,SAE/BrB,EAAIsB,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZ5B,EAAS,CAAC,QAAW,4BAA6B,MAEpDK,EAAI0B,KAAK7B,GCnCJ,SAAS8B,EAAUC,GAAQ,IACvBC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,iBAChBC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQ,EACpCC,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,kBAChDC,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAElDC,EAA0B,SAAChB,EAAUC,GACzCG,QAAQC,IAAIL,EAAUC,GACN,MAAXA,GAA6B,MAAXA,IAAmBU,GACxCA,EAAiBX,EAAUC,IAOzBc,EAA0B,SAAhBL,EAAOO,KAAP,UAA4BL,EAA5B,YAAqCF,EAAOK,SAAYD,EACxE,OAAO,4BAAQD,UAAWA,EAAWK,QALjB,SAACC,GACnBA,EAAMC,iBCbL,SAAwBC,EAASX,EAAQnC,GAE5CH,EAAc,OAAQ,kBAAmBG,EAD5B,CAAC+C,GAAID,EAASX,OAAQA,IDajCa,CAAed,EAAMa,GAAIZ,EAAOO,KAAMD,KAGoBD,GElBzD,SAASS,EAAYhB,GAAO,IACxBC,EAASD,EAATC,MACP,OAAOA,EAAMgB,OAAS,yBAAKZ,UAAU,OACrC,yBAAKA,UAAU,oCACb,uBAAGA,UAAU,wBAAb,WACA,kBAACa,EAAD,CAAOC,aAAW,EAACd,UAAW,IAAKJ,MAAOA,EAAMgB,WAEzC,KAGN,SAASC,EAAMlB,GAAQ,IACnBC,EAAkCD,EAAlCC,MAAOmB,EAA2BpB,EAA3BoB,WAAYD,EAAenB,EAAfmB,YADD,EAEaE,mBAASrB,EAAMC,MAAQD,EAAMC,MAAQ,MAFlD,mBAElBqB,EAFkB,KAELC,EAFK,KAGnBlB,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,0BAEhDmB,EADOC,OAAOC,SAASC,SACTH,MAAL,YAAW,WAAX,cACTI,EAAaJ,EAAQA,EAAMK,OAAOC,SAAW,EAE7CC,EAAW,UAAG9B,EAAMa,MAAT,UAAqBc,GAUhCI,EAAsB,SAACC,EAAgBxC,GAC9B,MAAXA,EACA8B,EAAeU,GACG,MAAXxC,GACH2B,GACJA,EAAWa,IAMf,OAAO,yBAAK5B,UAAWA,GACnB,6BACA,2BAAIJ,EAAMa,GAAV,MAAiBb,EAAMiC,SACvB,kBAAClB,EAAD,CAAaf,MAAOA,KAEpB,yBAAKI,UAAY,iBACfiB,IAA+B,IAAhBH,GAAyB,kBAAC,IAAMgB,SAAP,KACrC,kBAACpC,EAAD,CAAWE,MAAOqB,EAAanB,iBAAkB6B,EAAqB9B,OAtBlE,CAACO,KAAK,OAAQF,QAAQ,WAuB1B,kBAACR,EAAD,CAAWE,MAAOqB,EAAanB,iBAAkB6B,EAAqB9B,OAtBhE,CAACO,KAAK,SAAUF,QAAQ,YAuB9B,kBAACR,EAAD,CAAWE,MAAOqB,EAAanB,iBAAkB6B,EAAqB9B,OAtB/D,CAACO,KAAK,UAAWF,QAAQ,eAyBnB,IAAbwB,EAAoB,KAAO,4BAAQ1B,UAAU,oCAAoCK,QA/BvE,SAACC,GAChBA,EAAMC,iBACNa,OAAOC,SAASU,KAAhB,WAA2BnC,EAAMa,MA6BD,UCnDjC,SAASuB,EAAWrC,GAAQ,IAAD,EACMqB,mBAAS,IADf,mBACvBiB,EADuB,KACXC,EADW,OAEFlB,mBAAS,IAFP,mBAEvBmB,EAFuB,KAEfC,EAFe,OAGUpB,oBAAS,GAHnB,mBAGvBqB,EAHuB,KAGTC,EAHS,KAI9BC,qBAAU,WACR,IAAMC,EAAQ,YAAI7C,EAAM8C,WAAWC,OAAOT,GACtCO,EAAM7D,SAAWwD,EAAOxD,QAC1ByD,EAAUI,KAEX,CAAC7C,EAAM8C,UAAWN,EAAQF,IAE7BM,qBAAU,WACR,IAAqB,IAAjBF,EAAwB,EFF3B,SAAsBM,EAAUjF,GACrC,IAAID,EAAW,WACXkF,IACFlF,EAAQ,4BAAwBkF,IAEhCpF,EAAc,MAAOE,EAAUC,GEO3BkF,CAAajD,EAAMgD,UATW,SAACxD,EAAUC,GACxB,MAAXA,GACF8C,EAAc/C,GACdmD,GAAgB,IAGhBO,MAAM,4BAKX,CAACZ,EAAYI,EAAcC,EAAiB3C,EAAMgD,WAErD,IAAMG,EAAmB,SAACC,GACtB,IAAMC,EAAe,YAAOf,GAC5Be,EAAgBC,QAAQF,GACxBb,EAAcc,GACd,IAAME,EAAiB,YAAOf,GAC9Be,EAAkBD,QAAQd,GAC1BC,EAAUc,IAEZ,OAAOf,EAAOgB,KAAI,SAACC,EAAMC,GACvB,OAAO,kBAACxC,EAAD,CACPjB,MAAOwD,EACPrC,WAAc+B,EACd9C,UAAU,sCACVsD,IAAG,UAAKD,EAAL,mBCzCJ,SAASE,EAAY5D,GAC1B,IAAM6D,EAAcC,IAAMC,YACnBC,EAAYhE,EAAZgE,SACAC,EAAsB,SAACzE,EAAUC,GACvB,MAAXA,EACFuE,EAASxE,IAGTI,QAAQC,IAAIL,EAAUC,GACtByD,MAAM,sCAYV,OAAO,yBAAK7C,UAAWL,EAAMK,WACnB,0BAAM6D,SATK,SAACvD,GACpBA,EAAMC,iBACN,IAAMuD,EAASN,EAAYO,QAAQC,MHfnCzG,EAAc,OAAQ,kBGiBCqG,EHjB4B,CAAC/B,QGiBrCiC,IACfN,EAAYO,QAAQC,MAAQ,KAKlB,8BAAUC,IAAKT,EAAaU,UAAU,EAAMlE,UAAY,eAAe5B,KAAK,UAG5E,4BAAQgC,KAAK,SAASJ,UAAU,wBAAhC,WCtBP,SAASmE,EAAgBxE,GAAQ,IAAD,EACHqB,mBAAS,IADN,mBAC9ByB,EAD8B,KACnB2B,EADmB,KAE/BC,EAA8B,UAAnB1E,EAAM0E,SAOvB,OAAO,yBAAKrE,UAAWL,EAAMK,YACP,IAAbqE,GAAqB,kBAACd,EAAD,CAAaI,SAPpB,SAACZ,GACtB,IAAIuB,EAAa,YAAO7B,GACxB6B,EAAcrB,QAAQF,GACtBqB,EAAaE,IAIsDtE,UAAU,gBACzE,kBAACgC,EAAD,eAAYS,UAAWA,GAAe9C,KAIvC,SAAS4E,EAAqB5E,GAAQ,IACpCa,EAAWb,EAAXa,QADmC,EAERQ,oBAAS,GAFD,mBAEnCwD,EAFmC,KAExBC,EAFwB,OAGhBzD,mBAAS,MAHO,mBAGnCpB,EAHmC,KAG5B8E,EAH4B,KAKpCC,EAAsB,SAACxF,EAAUC,GACrCG,QAAQC,IAAIL,GACG,MAAXC,EACFsF,EAASvF,GAET0D,MAAM,0CAUV,OAPAN,qBAAU,YACU,IAAdiC,KJzBD,SAAwBhE,EAAS9C,GACpCH,EAAc,MAAD,kBAAmBiD,EAAnB,KAA+B9C,GIyB1CkH,CAAepE,EAASmE,GACxBF,GAAa,MAEd,CAACjE,EAASgE,EAAWC,IAEP,OAAV7E,EAAiB,KAAO,kBAACiB,EAAD,CAAOjB,MAAOA,EAAOI,UAAWL,EAAMK,YCVxD6E,MAzBf,WAEE,OACE,yBAAK7E,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK8E,IAAKC,IAAM/E,UAAU,WAAWgF,IAAI,SACzC,mCACO,4CADP,wBAGA,6BACE,kBAACb,EAAD,OAEF,uBACEnE,UAAU,WACV+B,KAAK,sBACLkD,OAAO,SACPC,IAAI,uBAJN,kBCPYC,QACW,cAA7B/D,OAAOC,SAAS+D,UAEe,UAA7BhE,OAAOC,SAAS+D,UAEhBhE,OAAOC,SAAS+D,SAASjE,MACvB,2DCXN,IAAMkE,EAAQ/G,SAASgH,eAAe,QAClCD,GACFE,IAASC,OAAO,kBAAC,EAAD,MAASH,GAG3B,IAAM/F,EAAImE,IAAMgC,cACVC,EAAWpH,SAASgH,eAAe,QACrCI,GACFH,IAASC,OACPlG,EAAE6E,EAAiBuB,EAASC,SAAUD,GAGdpH,SAASsH,iBAAiB,gBAElCC,SAAQ,SAAAC,GACxBP,IAASC,OACPlG,EAAEiF,EAAsBuB,EAAUH,SAClCG,MD2GA,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/G,QAAQ+G,MAAMA,EAAMC,c","file":"static/js/main.1df449c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest() \r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n  if (csrftoken){\r\n  //  xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n\r\n  xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    console.log(e)\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n  apiTweetAction\r\n    } from \"./lookup\"\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary'\r\n    const actionDisplay = action.display ? action.display : \"Action\"\r\n    \r\n    const handleActinBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActinBackendEvent)\r\n    }\r\n    const display = action.type === \"like\" ? `${likes} ${action.display}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import {backendLookup} from \"../lookup\"\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n  }\r\n \r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n  } \r\n  \r\nexport function apiTweetList(username, callback) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n  }","import React, {useState } from 'react'\r\n\r\nimport {ActionBtn} from \"./buttons\"\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className=\"row\">\r\n    <div className=\"col-11 mx-auto p3 border rounded\">\r\n      <p className=\"mb-0 tex-muted small\">Retweet</p>\r\n      <Tweet hideActions className={\" \"} tweet={tweet.parent} />\r\n    </div> \r\n    </div> : null\r\n    }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    const path = window.location.pathname\r\n    const match =  path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const like = {type:\"like\", display:\"Likes\"}\r\n    const unlike = {type:\"unlike\", display:\"Unlike\"}\r\n    const retweet = {type:\"retweet\", display:\"Retweet\"}\r\n    \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n        setActionTweet(newActionTweet)\r\n    } else if (status === 201) {\r\n        if (didRetweet) {\r\n        didRetweet(newActionTweet)\r\n        }\r\n    }\r\n\r\n    }\r\n    \r\n    return <div className={className}>\r\n        <div>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <ParentTweet tweet={tweet} />\r\n        </div>\r\n        <div className = 'btn btn-group'>\r\n        {(actionTweet && hideActions !== true) && <React.Fragment>\r\n             <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={like}/>\r\n             <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={unlike}/>\r\n             <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={retweet}/>\r\n            </React.Fragment>\r\n        }\r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}>View</button>}\r\n        </div>\r\n        \r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {Tweet} from \"./detail\"\r\nimport {apiTweetList} from \"./lookup\"\r\n\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n  \r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } \r\n          else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handelDidRetweet = (newTweet) => {\r\n        const updateTweetInit = [...tweetsInit]\r\n        updateTweetInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n      }\r\n      return tweets.map((item, index)=>{\r\n        return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handelDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`}/>\r\n      })\r\n    }","import React from 'react'\r\nimport {apiTweetCreate} from \"./lookup\"\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n   const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response)\r\n    } \r\n    else {\r\n      console.log(response, status)\r\n      alert(\"An error ocured please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // BackEnd API request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = \"\"\r\n  }\r\n\r\n  return <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea ref={textAreaRef} required={true} className = 'form-control' name='tweet'>\r\n\r\n              </textarea>\r\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n      </div>\r\n  }","import React, {useEffect, useState} from 'react'\r\n\r\nimport {apiTweetDetail} from \"./lookup\";\r\nimport {Tweet} from \"./detail\"\r\nimport {TweetsList} from \"./list\"\r\nimport {TweetCreate} from \"./create\"\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div> \r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookUp = (response, status) => {\r\n    console.log(response)\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookUp)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {TweetsComponent} from \"./tweets\"\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <div>\r\n          <TweetsComponent/>\r\n        </div>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst appEl = document.getElementById('root')\r\nif (appEl) {\r\n  ReactDOM.render(<App />, appEl\r\n  );\r\n}\r\nconst e = React.createElement\r\nconst TweetsEl = document.getElementById('news')\r\nif (TweetsEl) {\r\n  ReactDOM.render(\r\n    e(TweetsComponent, TweetsEl.dataset), TweetsEl);\r\n}\r\n\r\nconst tweetDetailElements = document.querySelectorAll(\".news-detail\")\r\n\r\ntweetDetailElements.forEach(container => {\r\n    ReactDOM.render(\r\n      e(TweetDetailComponent, container.dataset),\r\n      container);\r\n})\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}