{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daxoj\\\\Dev\\\\CityCube\\\\news-web\\\\src\\\\tweets\\\\components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from \"../lookup\";\nexport function TweetsComponent(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"react\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n}\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary';\n  const actionDisplay = action.display ? action.display : \"Action\";\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type = \"like\") {\n      if (userLike === true) {\n        setLikes(likes - +1);\n        setUserLike(false);\n      } else {\n        setLikes(tweet.likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === \"like\" ? `${likes} ${action.display}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  const like = {\n    type: \"like\",\n    display: \"Likes\"\n  };\n  const unlike = {\n    type: \"unlike\",\n    display: \"Unlike\"\n  };\n  const retweet = {\n    type: \"retweet\",\n    display: \"Retweet\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: unlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: retweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/daxoj/Dev/CityCube/news-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","TweetsList","tweets","setTweets","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","className","actionDisplay","display","handleClick","event","preventDefault","type","Tweet","like","unlike","retweet","id","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport {loadTweets} from \"../lookup\"\r\n\r\nexport function TweetsComponent(props) {\r\n\r\n  return <form>\r\n    <textarea className = 'react'>\r\n\r\n    </textarea>\r\n  </form>\r\n}\r\n\r\nexport function TweetsList(props){\r\n    const [tweets, setTweets] = useState([])\r\n  \r\n    useEffect(() => {\r\n      const myCallback = (response, status) => {\r\n        if (status === 200){\r\n          setTweets(response)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      loadTweets(myCallback)\r\n    }, [])\r\n    return tweets.map((item, index)=>{\r\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary'\r\n    const actionDisplay = action.display ? action.display : \"Action\"\r\n    \r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      if (action.type = \"like\") {\r\n        if (userLike === true) {\r\n          setLikes(likes -+ 1)\r\n          setUserLike(false)\r\n        } else {\r\n          setLikes(tweet.likes + 1)\r\n          setUserLike(true)\r\n        }\r\n\r\n      }\r\n    }\r\n    const display = action.type === \"like\" ? `${likes} ${action.display}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    const like = {type:\"like\", display:\"Likes\"}\r\n    const unlike = {type:\"unlike\", display:\"Unlike\"}\r\n    const retweet = {type:\"retweet\", display:\"Retweet\"}\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className = 'btn btn-group'>\r\n          <ActionBtn tweet={tweet} action={like}/>\r\n          <ActionBtn tweet={tweet} action={unlike}/>\r\n          <ActionBtn tweet={tweet} action={retweet}/>\r\n        </div>\r\n    </div>\r\n  }"]},"metadata":{},"sourceType":"module"}